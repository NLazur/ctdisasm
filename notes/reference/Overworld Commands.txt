Command	Address	Bytes	Pseudo	Summary	Description	Modified
00	1037	1	00	init mem	Initializes memory	2004.04.27
01	1091	2	01 pp	set palette	pp - palette . sets palette of boat sprite . looks a lot like 02	2004.08.11
02	10A8	2	02 vv	assignment	vv - value to OR and store to process memory 0F	2005.03.16
03	10BF	10	03 ?? ?? ?? ?? ?? ?? ?? ?? ?? ??		unknown - arguments do not appear to be loaded	2004.08.17
04	10CD	6	04 aaaaaa ?? ??		aaaaaa - address	2005.03.18
05	1100	5	05 llll xx yy	change location	llll - location to chage to . xx - X Coord . yy - Y Coord	2005.02.09
06	1169	1	06	direct page jump	unused . uses direct page register as jump value	2004.08.18
07	116B	5	07 ll xx yy vv	set tile	ll - offset to ROM location that determines layer . xx - X Coord . yy - Y Coord . vv - value to store	2004.08.20
08	11B2	4	08 ???? ??			2004.08.17
09	11F6	4	09 aaaaaa	add proc	"aaaaaa - memory address . adds extra processing to be done after an ""end"" is reached, slightly different from 43"	2005.03.15
0A	120C	2	0A oo		oo - offset to store a value to (+7E0C30)	2004.08.13
0B	121D	2	0B oo	increment	oo - offset to increment in process memory	2005.03.16
0C	1230	2	0C oo	decrement	oo - offset to decrement in process memory	2005.03.16
0D	1243	3	0D oo vv	assignment	oo - offset to store to process memory . vv -value to store	2005.03.16
0E	1257	3	0E oo bb	set bits	oo - offset to set bits in process memory . bb - bits to set	2005.03.16
0F	126D	3	0F oo bb	reset bits	oo - offset to reset bits in process memory . bb - bits to reset	2005.03.16
10	1285	3	10 aaaa	reset byte	aaaa - address of byte to reset (+7E0000)	2004.08.17
11	1296	3	11 aaaa	increment	aaaa - address to increment (+7E0000)	2004.08.13
12	12A7	3	12 aaaa	decrement	aaaa - address to decrement (+7E0000)	2004.08.18
13	12B8	4	13 aaaa vv	assignment	aaaa - address to store to (+7E0000) . vv - value to store	2004.08.06
14	12CE	4	14 aaaa bb	set bits	aaaa - address to reset bits in (+7E0000) . bb - bits to set	2004.08.17
15	12E7	4	15 aaaa bb	reset bits	aaaa - address to reset bits in (+7E0000) . bb - bits to reset	2004.08.16
16	1302	4	16 oo aaaa	assignment	oo - offset to load from process memory . aaaa - address to store to	2005.03.16
17	131C	4	17 oo aaaa	assignment	oo - offset to store to process memory . aaaa - address to load from (+7E0000)	2005.03.16
18	1336	3	18 oo aa	assignment	unused . oo - offset to store to . aa - offset to load from . both offsets use process memory	2005.03.16
19	1350	5	19 aaaa oooo	assignment	unused . aaaa - address to store to (+7E0000) . oooo - address to load from (+7E0000)	2004.08.18
1A	136A	3	1A aaaa	goto	aaaa - address to branch to	2004.08.09
1B	1375	3	1B oo jj	decrement until zero	oo - offset to decrement (for an address in memory) . jj - bytes to jump if value is not zero	2004.08.13
1C	1398	3	1C oo jj	if not zero	unused . oo - offset to compare in process memory . jj - bytes to jump if zero	2005.03.16
1D	13D8	3	1D oo jj	if zero	unused . oo - offset to compare in process memory . jj - bytes to jump if not zero	2005.03.16
1E	13D8	4	1E oo vv jj	if equal	oo - offset to check in process memory . vv - value to compare to . jj - byte to jump if not equal	2005.03.16
1F	13FC	4	1F oo vv jj	if not equal	oo - offset to compare in process memory . vv - value to compare . jj - bytes to jump if equal	2005.03.17
20	1420	4	20 oo bb jj	if bits reset	oo - offset to check in process memory . bb - bits to check . jj - bytes to jump if bits set	2005.03.16
21	1444	4	21 oo bb jj	if bits set	unused . oo - offset to check in process memory . bb - bits to check . jj - bytes to jump if bits reset	2005.03.16
22	1469	4	22 aaaa jj	if not zero	aaaa - address to check (+7E0000) . jj - bytes to jump if value is zero	2004.08.17
23	148B	4	23 aaaa jj	if zero	aaaa - address to check (+7E0000) . jj - bytes to jump if value is not zero	2004.08.17
24	14AD	5	24 aaaa vv jj	if equal	aaaa - address to compare . vv - value to compare . jj - bytes to jump if value is not equal to memory	2004.08.11
25	14D2	5	25 aaaa vv jj	if not equal	aaaa - address to compare . vv - value to compare . jj - bytes to jump if value is equal to memory	2004.08.17
26	14F7	5	26 aaaa bb jj	check bits reset	aaaa - address to check bits in (+7E0000) . bb - bits to check . jj - bytes to jump if bits set	2004.08.09
27	151C	5	27 aaaa bb jj	check bits set	aaaa - address to check bits in (+7E0000) . bb - bits to check . jj - bytes to jump if bits not set	2004.08.09
28	158B	2	28 ??		unknown - does not appear to actually use second byte	2004.08.13
29	1599	2	29 ??		unknown - second byte does not appear to be used by _this_ command	2004.08.10
2A	15A7	3	2A ?? ??		unused . unknown - arguments do not appear to be used	2004.08.18
2B	15B5	3	2B ?? ??		unused . unknown - arguments do not appear to be loaded	2004.08.18
2C	15C3	5	2C xxxx yyyy	set obj coord	xxxx - X Coord . yyyy - Y Coord . coords measured in pixels	2004.08.11
2D	15DF	2	2D bb	skip next byte	unused . literally does nothing but skip the next byte (next byte may still be used by other commands though)	2004.08.18
2E	15E3	5	2E ???? ????			2004.08.13
2F	15F9	5	2F ???? ????			2004.08.13
30	160F	2	30 ss	load sprite	ss - index for sprite to load	2004.08.12
31	161D	2	31 tt	pause	Appears to be a pause command of sorts	2006.12.21
32	164B	2	32 tt	pause	Appears to be a pause command of sorts	2006.12.21
33	17D2	8	33 ?? ???? ???? ????			2004.08.18
34	1807	3	34 aaaa	call function	aaaa - address of (local) function to call	2004.08.09
35	1839	3	35 xx yy	set dest coord	xx - X coord . yy - Y coord . sets destination coordinates for end of Boat trip	2004.08.10
36	1848	3	36 aaaa	go sub	aaaa - address to branch to . stores current pointer before branching to subroutine	2004.08.10
37	185F	1	37	return	returns from a subroutine	2004.08.11
38	186B	2	38 xx		xx - multipurpose variable? . 06 - sets destination facing for end of Boat trip	2004.08.10
39	188E	2	39 ss	set speed	"ss - speed of sprite, 00 - fastest . sets speed of Boat sprite in 1000 AD"	2004.08.12
3A	18B4	3	3A ????		unused . unknown - looks like it compares the argument to a value in memory and if greater or equal it makes a direct page jump	2004.08.18
3B	18C7	3	3B ss pp	play positional sound	ss - sound effect index . pp - panning position (same as AllPurpSnd 18) . overlaps 3C	2004.08.17
3C	18D0	3	3C ss pp	play positional sound	ss - sound effect index . pp - panning position (same as AllPurpSnd 19) . overlapped by 3B	2004.08.17
3D	18F1	2	3D ss	play song	ss - song to play . only plays if 7F01ED is equal to 00	2004.08.18
3E	1947	2	3E ??		unknown - may have something to do with layer 3	2004.08.11
3F	1959	5	3F ???? ????			2004.08.17
40	19C2	5	40 ???? ????			2004.08.17
41	1A2B	1	41	direct page jump	unused . identical to 06	2004.08.18
42	1A43	3	42 ????		unused	2004.08.18
43	1A2D	4	43 aaaaaa	add proc	"aaaaaa - memory address . adds extra processing to be done after an ""end"" is reached, slightly different from 09"	2005.03.15
44	1A52	3	44 ii oo	set negative	ii - index to subroutine . oo - offset to set negative	2004.08.11
45	1AAC	3	45 ii oo	set positive	ii - index to subroutine . oo - offset to set positive . uses same subroutines as 44	2004.08.11
46	1ACA	3	46 oo vv	add	oo - offset to add to in process memory . vv - value to add	2005.03.16
47	1AE1	3	47 oo vv	subtract	oo - offset to subtract from in process memory . vv - value to subtract	2005.03.16
48	1AFB	4	48 aaaa vv	add	aaaa - address to add to (+7E0000) . vv - value to add	2004.08.18
49	1B15	4	49 aaaa vv	subtract	aaaa - address to subtract from (+7E0000) . vv - value to subtract	2004.08.18
4A	18F9	2	4A ss	play song	ss - song to play	2004.08.18
4B	191F	5	4B ?? ?? ?? ??			2004.08.18
4C	1541	5	4C aaaa vv jj	if greater or equal	aaaa - address to compare . vv - value to compare . jj - bytes to jump	2004.08.11
4D	1566	5	4D aaaa vv jj	if less than	aaaa - address to compare . vv - value to compare . jj - bytes to jump	2004.08.11
4E	181C	4	4E aaaaaa	call function	aaaaaa - address of (non-local) function to call	2004.08.17
4F	1B2F	9	4F ll xx yy mm uu vv ww hh	copy tiles	ll - source layer . xx - source X Coord . yy - source Y Coord . mm - dest layer . uu - dest X Coord . vv - dest Y Coord . ww - copy width . hh - copy height	2005.03.18
50	1BE0	5	50 ?? ?? ?? ??			2004.08.18
51	16FA	3	51 ?? ??			2004.08.18
52	1C81	1	52	end	appears to be a break / end style command . not sure as to its severity	2004.08.10
