Command	Address	Bytes	Pseudo	Summary	Description	Modified
00	5F74	1	00	return	5900 context - null command (not executed) . 5AA3 context - unknown	2004.09.28
01	5F6E	1	01	color crash	unknown - probably a debug hold-over designed to let the event command programmer know when something went terribly wrong	2008.02.22
02	5FB6	3	02 aa po	call event	"aa - part of the offset to event pointer to load . p - priority . o - part of the offset to event pointer to load . will wait only if new thread has higher priority, instantly returns if object is dead or busy"	2005.01.11
03	607E	3	03 aa po	call event	aa - part of the offset to event pointer to load . p - priority . o - part of the offset to event pointer to load . waits until execution starts (will wait indefinitely if current thread has lower priority than new one)	2005.01.11
04	6109	3	04 aa po	call event	aa - part of the offset to event pointer to load . p - priority . o - part of the offset to event pointer to load . will wait on execution	2005.01.11
05	61E9	3	05 cc po	call PC event	"cc - PC . p - priority . o - part of the offset to event pointer to load . will wait only if new thread has higher priority, instantly returns if object is dead or busy"	2005.01.11
06	61FE	3	06 cc po	call PC event	cc - PC . p - priority . o - part of the offset to event pointer to load . waits until execution starts (will wait indefinitely if current thread has lower priority than new one)	2005.01.11
07	6214	3	07 cc po	call PC event	cc - PC . p - priority . o - part of the offset to event pointer to load . will wait on execution	2005.01.11
08	6240	1	08	object activation	turn off object activate & touch (PC can't interact)	2007.01.11
09	624B	1	09	object activation	turn on object activate & touch	2007.01.11
0A	6254	2	0A oo	remove object	oo - object to stop drawing and remove (/2)	2004.10.21
0B	6269	2	0B oo	script processing	turn off processing   oo - object (/2) to turn off	2007.01.11
0C	6282	2	0C oo	script processing	turn on processing   oo - object (/2) to turn on	2007.01.11
0D	6295	2	0D pp	npc move props	pp - npc movement properties	2004.07.09
0E	62A4	2	0E pp	npc positioning	pp - position on tile	2006.12.21
0F	5535	1	0F	npc facing (up)	overlaps A6 . should be same with a hard coded 00 value	2004.06.21
10	62B5	2	10 jj	jump fwd	jj - bytes to jump forwards . partial overlap with 11	2004.04.01
11	62CB	2	11 jj	jump back	jj - bytes to jump backwards . partial overlap with 10	2004.04.01
12	62DE	5	12 aa vv oo jj	if statement	"aa - offset into SNES memory (*2, +7F0200) . vv - value used in operation . oo - index for operation pointer (+006667) . jj - bytes to jump to next command if operation equates false . partial overlap with 16"	2005.01.17
13	6313	6	13 aa vvvv oo jj	if statement	"aa - offset into SNES memory (*2, +7F0200) . vvvv - value used in operation . oo - index for operation pointer (+006667) . jj - bytes to jump to next command if operation equates false . two byte version of 12"	2005.01.17
14	6361	5	14 aa bb oo jj	if statement	"aa - offset into SNES memory (*2, +7F0200) . bb - offset into SNES memory (*2, +7F0200) . oo - index for operation pointer (+006667) . jj - bytes to jump to next command if operation equates false . partial overlap with 16"	2005.01.17
15	63A4	5	15 aa bb oo jj	if statement	"aa - offset into SNES memory (*2, +7F0200) . bb - offset into SNES memory (*2, +7F0200) . oo - index for operation pointer (+006667) . jj - bytes to jump to next command if operation equates false . partial overlap with 16 . two byte version of 14"	2005.01.17
16	63E6	5	16 aa vv oo jj	if statement	aa - offset into SNES memory (+7F0000) . vv - value used in operation . oo - index for operation pointer (+006667) . jj - bytes to jump to next command if operation equates false . partial overlap with 12	2004.04.01
17	5539	1	17	npc facing (down)	overlaps A6 . should be same with a hard coded 01 value	2004.05.25
18	6442	3	18 vv jj	check storyline	vv - storyline point to check for . jj - bytes to jump if storyline point already reached (or passed)	2004.06.14
19	653B	2	19 aa	get result	"aa - address to load result from (*2, +7F0200) . Overlaps 1C"	2007.01.11
1A	6568	3	1A rr jj	result	rr - target result . jj - bytes to jump if result does not match target	2004.05.26
1B	553D	1	1B	npc facing (left)	overlaps A6 . should be same with a hard coded 02 value	2004.06.24
1C	654E	3	1C aaaa	get result	aaaa - address to load result from (+7F0000) . Overlapped by 19	2007.01.11
1D	5541	1	1D	npc facing (right)	overlaps A6 . should be same with a hard coded 03 value	2004.06.24
1E	556C	2	1E nn	npc facing (up)	nn - npc to change facing for . overlaps A6	2004.06.24
1F	5579	2	1F nn	npc facing (down)	nn - npc to change facing for . overlaps A6	2004.06.24
20	658F	2	20 oo	get pc1	"oo - offset to store to (*2, +7F0200) . gets PC1 value and stores in memory"	2005.01.17
21	65AA	4	21 oo aa bb	get object coord	"oo - object (/2) . aa - offset to store X Coord to (*2, +7F0200) . bb - offset to store Y Coord to (*2, +7F0200) . overlapped by 22"	2005.01.17
22	65EB	4	22 cc aa bb	get pc coord	"cc - PC (/2) . aa - offset to store X Coord to (*2, +7F0200) . bb - offset to store Y Coord to (*2, +7F0200) . overlaps 21"	2005.01.17
23	65F8	3	23 oo aa	get obj facing	"oo - object (/2) . aa - offset to store to (*2, +7F0200) . overlapped by 24"	2005.01.17
24	661F	3	24 cc aa	get pc facing	"cc - PC (/2) . aa - offset to store to (*2, +7F0200) . overlaps 23"	2005.01.17
25	5586	2	25 nn	npc facing (left)	nn - npc to change facing for . overlaps A6	2004.06.24
26	5593	2	26 nn	npc facing (right)	nn - npc to change facing for . overlaps A6	2004.06.28
27	662C	3	27 oo jj	check object status	"oo - object number (/2) . jj - bytes to jump if object is offscreen, not loaded ""ex: PC not in party"", or has drawstatus hide"	2007.06.12
28	6655	3	28 oo jj	check battle range	oo - object number (/2) .  jj - bytes to jump if object is not close enough to be included in battle	2007.06.12
29	3E84	2	29 ii	load ascii text	ii - index (+0x80) . loads ascii ending credits text from 3DA000.	2007.06.12
2A	3ED6	1	2A		unknown - sets bit 04 at 7E0154	2004.06.17
2B	3EDE	1	2B		"unknown - overlaps 2A, sets bit 08"	2004.06.17
2C	3EE6	3	2C ?? ??			2004.06.23
2D	66A5	2	2D jj	check any btn	jj - bytes to jump if no button pressed . checks for any button pressed (7E00F8)	2004.06.22
2E	4A4E	2	2E m? …	color math	m - mode . (see long notes)	2008.03.03
2F	3F12	3	2F ?? ??		"unknown - stores to 7E:0BE3 and 7E:0BE4, appears to have something to do with scrolling layers"	2007.08.31
30	66B2	2	30 jj	check Dash btn	jj - bytes to jump if not pressed . Checks to see if Dash is pressed	2008.02.25
31	66BC	2	31 jj	check Confirm btn	jj - bytes to jump if not pressed . Checks to see if Confirm is pressed	2008.02.25
32	3EE2	1	32		unknown - overlaps 2A . sets bit 10	2004.06.23
33	3711	2	33 pp	change palette	pp - palette to change to	2007.01.11
34	66C6	2	34 jj	check a btn	jj - bytes to jump if check fails . Checks to see if A is pressed	2004.06.14
35	66E5	2	35 jj	check b btn	jj - bytes to jump if check fails . Checks to see if B is pressed	2004.06.14
36	66EF	2	36 jj	check x btn	jj - bytes to jump if check fails . Checks to see if X is pressed	2004.06.14
37	66F9	2	37 jj	check y btn	jj - bytes to jump if check fails . Checks to see if Y is pressed	2004.06.14
38	6705	2	38 jj	check l btn	jj - bytes to jump if check fails . Checks to see if L is pressed	2004.06.14
39	670F	2	39 jj	check r btn	jj - bytes to jump if check fails . Checks to see if R is pressed	2004.06.14
3A	5F6E	1	3A	alias	same as 01	2008.02.22
3B	6719	2	3B jj	check Dash btn	jj - bytes to jump if not pressed . Checks to see if Dash has been pressed since last check	2008.02.25
3C	6724	2	3C jj	check Confirm btn	jj - bytes to jump if not pressed . Checks to see if Confirm has been pressed since last check	2008.02.25
3D	5F6E	1	3D	alias	same as 01	2008.02.22
3E	5F6E	1	3E	alias	same as 01	2008.02.22
3F	6732	2	3F jj	check a btn	jj - bytes to jump if check fails . Checks to see if A has been pressed since last check	2008.02.25
40	6740	2	40 jj	check b btn	jj - bytes to jump if check fails . Checks to see if B has been pressed since last check	2008.02.25
41	674E	2	41 jj	check x btn	jj - bytes to jump if check fails . Checks to see if X has been pressed since last check	2008.02.25
42	675C	2	42 jj	check y btn	jj - bytes to jump if check fails . Checks to see if Y has been pressed since last check	2008.02.25
43	676A	2	43 jj	check l btn	jj - bytes to jump if check fails . Checks to see if L has been pressed since last check	2008.02.25
44	6778	2	44 jj	check r btn	jj - bytes to jump if check fails . Checks to see if R has been pressed since last check	2008.02.25
45	5F6E	1	45	alias	same as 01	2008.02.22
46	5F6E	1	46	alias	same as 01	2008.02.22
47	6788	2	47 ll	animation limiter	"ll - limit on animations . range and meaning of value not currently known, plays a part in avoiding slowdown when there is a lot of activity on screen"	2007.06.12
48	6792	5	48 aaaaaa oo	assignment	"aaaaaa - address to load from . oo - offset to store to (*2, +7F0200)"	2005.01.17
49	67C7	5	49 aaaaaa oo	assignment	"aaaaaa - address to load from . oo - offset to store to (/2 +7F0200), two byte version of 48"	2004.09.21
4A	67D7	5	4A aaaaaa vv	assignment	aaaaaa - SNES memory address to store to . vv - value to load	2004.09.10
4B	67FB	6	4B aaaaaa vvvv	assignment	aaaaaa - SNES memory address to store to . vvvv - value to load	2004.09.10
4C	680C	5	4C aaaaaa oo	assignment	"aaaaaa - address to store to . oo - offset to load from (*2, +7F0200) .  loads one byte"	2005.01.17
4D	6829	5	4D aaaaaa oo	assignment	"aaaaaa - address to store to . oo - offset to load from (*2, +7F0200) . loads two bytes"	2005.01.17
4E	6846	6	4E aaaa bb cccc …	memcpy	aaaa - destination bank address . bb - destination bank (7E or 7F only) . cccc - bytes to copy +2 (source data immediately follows command)	2004.06.17
4F	68A5	3	4F vv oo	assignment	"vv - value to store . oo - offset to store to (*2, +7F0200)"	2005.01.17
50	68C6	4	50 vvvv oo	assignment	"vvvv - value to store . oo - offset to store to (*2, +7F0200) . two byte version of 4F"	2005.01.17
51	68E9	3	51 aa oo	assignment	"aa - offset to load from (*2, +7F0200) . oo - offset to store to (*2, +7F0200) . mem-to-mem assignment"	2005.01.17
52	6913	3	52 aa oo	assignment	"aa - offset to load from (*2, +7F0200) . oo - offset to store to (*2, +7F0200) . mem-to-mem assignment . two byte version of 51"	2005.01.17
53	693D	4	53 aaaa oo	assignment	"aaaa - address to load from (+7F0000) . oo - offset to store to (*2, +7F0200) . mem-to-mem assignment"	2005.01.17
54	6964	4	54 aaaa oo	assignment	"aaaa - address to load from (+7F0000) . oo - offset to store to (*2, +7F0200) . mem-to-mem assignment . two byte version of 53"	2005.01.17
55	698B	2	55 oo	get storyline ctr	"oo - offset to store to (*2, +7F0200) . stores storyline ctr in specified memory address"	2005.01.17
56	69A6	4	56 vv aaaa	assignment	vv - value to store . aaaa - address to store to (+7F0000) . local memory assignment	2008.08.01
57	41E4	1	57	load crono	load Crono if in party . overlaps 80	2004.06.28
58	69C4	4	58 oo aaaa	assignment	"oo - offset to load from (*2, +7F0200) . aaaa - address to store to (+7F0000) . inverse action of command 53"	2005.01.17
59	69EB	4	59 oo aaaa	assignment	"oo - offset to load from (*2, +7F0200) . aaaa - address to store to (+7F0000) . two byte version of 58"	2005.01.17
5A	6A12	2	5A vv	assign storyline ctr	vv - value to assign . sets 7F0000 (storyline ctr) to value vv	2004.05.26
5B	6A1F	3	5B vv oo	add	"vv - value to add . oo - offset in memory (*2, +7F0200) to add to"	2005.01.17
5C	41EC	1	5C	load marle	load Marle if in party . overlaps 80	2004.06.28
5D	6A45	3	5D oo aa	add	"oo - offset to load from (*2, +7F0200) . aa - offset to add to (*2, +7F0200) . unused"	2005.01.17
5E	6A74	3	5E oo aa	add	"oo - offset to load from (*2, +7F0200) . aa - offset to add to (*2, +7F0200) . two byte version of 5D"	2005.01.17
5F	6AA3	3	5F vv oo	subtract	"vv - value to subtract . oo - offset in memory (*2, +7F0200) to subtract from"	2005.01.17
60	6AC9	4	60 vvvv oo	subtract	"vvvv - value to subtract . oo - offset in memory (*2, +7F0200) to subtract from . two byte version of 5F"	2005.01.17
61	6AF1	3	61 oo aa	subtract	"oo - offset in memory to load (*2, +7F0200) . aa - offset in memory to subtract from (*2, +7F0200)"	2005.01.17
62	41F4	1	62	load lucca	load Lucca if in party . overlaps 80	2004.06.28
63	6B20	3	63 bb oo	set bit	"bb - bit to set . oo - offset to set bit in (*2, +7F0200)"	2005.01.17
64	6B4B	3	64 bb oo	reset bit	"bb - bit to reset . oo - offset to set bit in (*2, +7F0200)"	2005.01.17
65	6B76	3	65 bb aa	set bit	bb - 80 - local memory to address (adds 0x100 to aa) . 7F - bit to set . aa - offset to set bit in (+7F0000)	2004.05.24
66	6BA4	3	66 bb aa	reset bit	bb - 80 - local memory to address (adds 0x100 to aa) . 7F - bit to reset . aa - offset to reset bit in (+7F0000)	2004.05.26
67	6BD2	3	67 bb oo	reset bits	"bb - bits to keep . oo - offset to reset bits in (*2, +7F0200)"	2008.02.25
68	41FC	1	68	load frog	load Frog if in party . overlaps 80	2004.06.28
69	6BF7	3	6B bb oo	set bits	"bb - bit mask to set . oo - offset to set bits in (*2, +7F0200)"	2005.01.17
6A	4204	1	6A	load robo	load Robo if in party . overlaps 80	2004.06.28
6B	6C1C	3	6B bb oo	toggle bits	"bb - bits to toggle . oo - offset to toggle bits in (*2, +7F0200)"	2005.01.17
6C	420C	1	6C	load ayla	load Ayla if in party . overlaps 80	2004.06.28
6D	4214	1	6D	load magus	load Magus if in party . overlaps 80	2004.06.28
6E	5F6E	1	6E	alias	same as 01	2008.02.22
6F	6C41	3	6F ss oo	downshift	"ss - bits to downshift . oo - offset to downshift (*2, +7F0200)"	2005.01.17
70	5F6E	1	70	alias	same as 01	2008.02.22
71	6C69	2	71 oo	increment	oo - offset (/2) in memory (+7F0200) to be incremented	2004.04.06
72	6C85	2	72 oo	increment	oo - offset (/2) in memory (+7F0200) to be incremented . two byte version of 71	2004.06.24
73	6CA1	2	73 oo	decrement	oo - offset (/2) in memory (+7F0200) to be decremented	2004.06.03
74	5F6E	1	74	alias	same as 01	2008.02.22
75	6CBD	2	75 oo	set byte	oo - offset (/2) in memory (+7F0200) to set to 1	2004.03.31
76	6CD6	2	76 oo	set byte	oo - offset (/2) in memory (+7F0200) to set to 1 . two byte version of 75	2004.06.29
77	6CF0	2	77 oo	reset byte	oo - offset (/2) in memory (+7F0200) to set to 0	2004.04.15
78	5F6E	1	78	alias	same as 01	2008.02.22
79	5F6E	1	79	alias	same as 01	2008.02.22
7A	4D06	4	7A xx yy hh	npc jump	"xx - xcoord . yy - ycoord . hh - height/speed of jump . apparently, the npc has to be able to land in an unoccupied, walkable spot"	2004.06.18
7B	4E25	5	7B dd ee ff gg	npc jump	"dd, ee - related to destination? . ff, gg - speed and height? . unused"	2007.08.31
7C	4CEC	2	7C oo	object drawing	oo - object to turn drawing on for . overlaps 90	2005.01.10
7D	4CF9	2	7D oo	object drawing	oo - object to turn drawing off for . overlaps 90	2005.01.10
7E	4CE6	1	7E	object drawing	Turns object drawing off . uses value 80 . overlaps 90	2004.10.21
7F	6D09	2	7F oo	random	"oo - offset to store to (*2, +7F0200)"	2007.01.11
80	421E	2	80 cc	load pc	cc - pc to load (if in party)	2004.09.15
81	4476	2	81 xx	load pc	xx - pc to load	2004.05.25
82	4590	2	82 xx	load npc	xx - npc to load	2004.03.29
83	46DF	3	83 ee ii	load enemy	ee - enemy to load . ii - enemy battle data . 80 - Static enemy . 7F - Enemy target index (Values 03:0A valid)	2008.02.12
84	4867	2	84 pp	npc solid props	pp - npc solidity properties	2004.07.09
85	5F6E	1	85	alias	same as 01	2008.02.22
86	5F6E	1	86	alias	same as 01	2008.02.22
87	4876	2	87 ss	script timing	Values 0-7F set speed (0 being fastest) while 80 seems to pause processing altogether.	2006.12.21
88	4892	2	88 m? …	memcpy	m - mode (see long notes)	2004.06.25
89	4B49	2	89 ss	set npc speed	ss - speed of movement . sets speed of movement for NPCs	2004.07.15
8A	4B58	2	8A aa	set npc speed	"aa - offset to load npc speed from (*2, 7F0200)"	2005.02.08
8B	4B74	3	8B xx yy	set object coord	xx - x coord . yy - y coord	2004.07.09
8C	4BC3	3	8C aa bb	set object coord	"aa - offset to load x coord from (*2, 7F0200) . bb - offset to load y coord from (*2, 7F0200)"	2005.02.08
8D	4C27	5	8D xxxx yyyy	set object coord	xxxx - x coord in pixels (*16) . yyyy - y coord in pixels (*16)	2004.07.09
8E	4C74	2	8E pp	sprite priority	pp - sets sprite priority . 80 - determines mode . 40 - ??? . 30 - top half . 0C - ??? . 03 - bottom half	2004.11.29
8F	5429	2	8F cc	distant object follow	cc - PC to follow at a distance	2007.08.31
90	4CD5	1	90	object drawing	Turns object drawing on	2004.10.21
91	4CE0	1	91	object drawing	Turns object drawing off . uses value 00 . overlaps 90	2004.10.21
92	4E73	3	92 dd mm	vector move	"dd - direction of movement in degrees (where 0x40 = 90 deg, and 0 = right) . mm - magnitude"	2005.01.10
93	5F6E	1	93	alias	same as 01	2008.02.22
94	5215	2	94 oo	object follow	oo - object to follow	2005.01.10
95	5410	2	95 cc	pc follow	cc - PC to follow . appears to overlap 94	2005.01.10
96	4F61	3	96 xx yy	move npc	xx - x coord . yy - y coord	2004.09.15
97	5084	3	97 aa bb	move sprite	"aa - offset to load x coord from (*2, 7F0200) . bb - offset to load y coord from (*2, 7F0200)"	2005.02.08
98	534A	3	98 oo mm	move to object	oo - object . mm - distance to travel (magnitude?)	2005.01.10
99	550E	3	99 cc mm	move to pc	cc - PC . mm - distance to travel (magnitude?) . overlaps 98	2005.01.10
9A	4FEA	4	9A xx yy mm	move to coord	xx - x coord . yy - y coord . mm - distance to travel (magnitude?)	2005.01.10
9B	5F6E	1	9B	alias	same as 01	2008.02.22
9C	4EC7	3	9C dd mm	vector move	"dd - direction of movement in degrees (where 0x40 = 90 deg, and 0 = right) . mm - magnitude . does not change facing"	2005.01.10
9D	4F0A	3	9D aa bb	vector move	"aa - offset to load direction from (*2, +7F0200) . bb - offset to load magnitude from (*2, +7F0200) . does not change facing"	2005.02.08
9E	52C0	2	9E oo	vector move to object	"oo - object (/2) to move to . does not change facing, overlapped by 9F"	2007.06.12
9F	54F5	2	9F cc	vector move to pc	"cc - PC (/2) to move to .  does not change facing, overlaps 9E"	2007.06.12
A0	5129	3	A0 xx yy	animated move	xx - x coord . yy - y coord . move npc while playing animation	2004.07.09
A1	5191	3	A1 aa bb	animated move	"aa - offset to load x coord from (*2, +7F0200) . bb - offset to load y coord from (*2, +7F0200) . used in End of Time for Robo"	2005.02.08
A2	5F6E	1	A2	alias	same as 01	2008.02.22
A3	5F6E	1	A3	alias	same as 01	2008.02.22
A4	5F6E	1	A4	alias	same as 01	2008.02.22
A5	5F6E	1	A5	alias	same as 01	2008.02.22
A6	5545	2	A6 ff	npc facing	ff - facing . 00 - up . 01 - down . 02 - left . 03 - right . overlapped by 17	2004.06.14
A7	5557	2	A7 oo	npc facing	"oo - offset to load facing from (*2, +7F0200) . overlaps A6"	2005.01.17
A8	55A0	2	A8 oo	face object	oo - object (/2) to face . overlapped by A9	2007.06.12
A9	5605	2	A9 cc	face pc	cc - PC (/2) to face . overlaps A8	2007.06.12
AA	2E67	2	AA aa	animation	aa - animation to play . loops	2005.01.17
AB	2E9A	2	AB aa	animation	aa - animation to play	2005.01.10
AC	2F71	2	AC aa	static animation	aa - animation to play . static animations like sleeping	2004.07.09
AD	2F96	2	AD tt	pause	tt - time to wait in 1/16 seconds . Party PCs are measured in 1/64 seconds	2004.10.28
AE	2E8F	1	AE	reset animation	resets animation for current object	2005.01.10
AF	2FFD	1	AF	exploration	allows player to control PCs (single controller check)	2005.01.11
B0	3002	1	B0	exploration	allows player to control PCs (infinite controller check)	2005.01.11
B1	353F	1	B1	break	"end command for arbitrary access context (sets conditions for loop to end), advances to next command"	2004.05.25
B2	3543	1	B2	end	end command for arbitrary access context (sets conditions for loop to end)	2004.03.31
B3	2E87	1	B3	animation	overlaps AA . should be same with hard coded 00	2005.01.10
B4	2E8B	1	B4	animation	overlaps AA . should be same with hard coded 01	2005.01.10
B5	3546	2	B5 oo	move to object	loops 94	2005.01.10
B6	354F	2	B6 cc	move to pc	loops 95	2005.01.10
B7	2F01	3	B7 aa ll	loop animation	aa - animation to play . ll - loops	2005.01.17
B8	3557	4	B8 aaaaaa	string index	aaaaaa - address to set string index to	2004.04.07
B9	2FC6	1	B9	pause	1/4 second pause	2004.10.28
BA	2FCA	1	BA	pause	1/2 second pause	2004.10.28
BB	3570	2	BB ss	personal textbox	ss - string displayed . closes after walking away	2004.05.19
BC	2FD2	1	BC	pause	1 second pause	2004.10.28
BD	2FCE	1	BD	pause	2 second pause	2004.10.28
BE	5F6E	1	BE	alias	same as 01	2008.02.22
BF	5F6E	1	BF	alias	same as 01	2008.02.22
C0	3643	3	C0 ss ll	dec box auto	"ss - string displayed . ll - 03 - last line . 0C - first line . Stores value 00 at 7E0130 . overlapped by C3, C4"	2005.01.10
C1	35B5	2	C1 ss	textbox top	ss - string displayed	2004.05.21
C2	35FC	2	C2 ss	textbox bottom	ss - string displayed	2004.05.21
C3	36AA	3	C3 ss ll	dec box top	ss - string displayed . ll - 03 - last line . 0C - first line . Stores value 01 at 7E0130 . overlaps C0	2004.11.22
C4	36DD	3	C4 ss ll	dec box bottom	ss - string displayed . ll - 03 - last line . 0C - first line . Stores value 02 at 7E0130 . overlaps C0	2004.11.22
C5	5F6E	1	C5	alias	same as 01	2008.02.22
C6	5F6E	1	C6	alias	same as 01	2008.02.22
C7	37C7	2	C7 oo	add item	"oo - offset to load item from (*2, +7F0200)"	2005.01.17
C8	3757	2	C8 dd	special dialog	dd - dialog to display	2004.05.26
C9	3780	3	C9 ii jj	check item	ii - item to check for . jj - byte to jump if item missing	2004.06.23
CA	37B1	2	CA ii	add item	ii - item added to inventory	2004.05.28
CB	37E3	2	CB ii	remove item	ii - item to remove from inventory	2004.06.11
CC	3827	4	CC gggg jj	check gold	gggg - gold amount to check for . jj - bytes to jump if PC does not have enough gold	2004.05.28
CD	385B	3	CD gggg	add gold	gggg - gold to add	2004.06.03
CE	3874	3	CE gggg	subtract gold	gggg - gold to subtract	2004.05.28
CF	388D	3	CF cc jj	check recruited pc	cc - PC to check for	2004.06.21
D0	38BE	2	D0 cc	add reserve pc	cc - PC to add to reserve party	2004.06.17
D1	38D3	2	D1 cc	remove pc	cc - PC to remove	2004.06.22
D2	38E8	3	D2 cc jj	check active pc	cc - character to check for . jj - bytes to jump forward . May actually be check and load	2004.06.17
D3	3919	2	D3 cc	add active pc	cc - character to add to party	2004.06.17
D4	394E	2	D4 cc	move pc to reserve	cc - character to remove . switches character from active party to reserve	2004.06.22
D5	3A68	3	D5 cc ii	equip item	cc - character to equip on . ii - item to equip	2004.06.28
D6	3A07	2	D6 cc	remove active pc	cc - PC to remove from active party	2004.06.30
D7	37F9	3	D7 ii oo	get item amount	"ii - item to get quantity of . oo - offset to store value in (*2, +7F0200)"	2005.01.17
D8	3A83	3	D8 ffff	battle	ffff - various bit flags for battle . see long notes	2004.10.25
D9	326C	7	D9 uu vv ww xx yy zz	move party	uu - pc1 x coord . vv - pc1 y coord . ww - pc2 x . xx - pc2 y . yy - pc3 x . zz - pc3 y	2004.04.30
DA	345A	1	DA	party follow	causes PC2 and PC3 to follow PC1 around on the map	2004.10.27
DB	5F6E	1	DB	alias	same as 01	2008.02.22
DC	3AF1	5	DC llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - unused . xx - x coord . yy - y coord . instantly moves party to another location"	2004.11.08
DD	3B1B	5	DD llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - unused . xx - x coord . yy - y coord . instantly moves party to another location"	2004.11.08
DE	3B45	5	DE llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - unused . xx - x coord . yy - y coord . instantly moves party to another location . overlaps DD"	2004.11.08
DF	3B98	5	DF llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - unused . xx - x coord . yy - y coord . instantly moves party to another location . overlaps E1"	2004.11.08
E0	3AB7	5	E0 llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - ??? . xx - x coord . yy - y coord . instantly moves party to another location"	2004.11.08
E1	3B4B	5	E1 llll xx yy	change location	"llll - 01FF - location to change to, 0600 - facing, 1800 - ???, 8000 - unused . xx - x coord . yy - y coord . instantly moves party to another location . waits for vsync"	2005.01.10
E2	3B9E	5	E2 aa bb cc dd	change location	"change location from memory . each byte is an offset to load data from (*2, +7F0200)"	2005.01.17
E3	3C05	2	E3 tt	explore mode	"tt - toggle value . when on, party can explore. when off, party cannot do anything"	2004.04.12
E4	3D97	8	E4 ll tt rr bb xx yy ff	copy tiles	ll - left . tt - top . rr - right . bb - bottom . xx - dest x . yy - dest y . ff - bitfield (see long notes)	2004.06.04
E5	3DC5	8	E5 ll tt rr bb xx yy ff	copy tiles	ll - left . tt - top . rr - right . bb - bottom . xx - dest x . yy - dest y . ff - bitfield (see long notes)	2004.06.04
E6	3DF4	5	E6 ???? ll ??	scroll layers	ll - layers to scroll (bitfield) . 01 - Layer 1 . 02 - Layer 2 . 04 - Layer 3	2004.06.14
E7	3E30	3	E7 xx yy	scroll screen	xx - x coord . yy - y coord	2004.04.12
E8	3C11	2	E8 ss	play sound	ss - sound effect	2004.04.06
E9	5F6E	1	E9	alias	same as 01	2008.02.22
EA	3C2F	2	EA ss	play song	ss - song	2004.04.07
EB	3C4C	3	EB ss vv	music volume	ss - speed of change . vv - volume . FF = normal volume	2004.07.21
EC	3C98	4	EC cc ?? ??	all purpose sound	cc - command . All purpose sound command	2004.08.05
ED	3CBC	1	ED	wait for silence	"if this works the way I think it does, this waits until the SPC chip has been told to stop before it continues with the next command"	2004.06.04
EE	3CC5	1	EE	wait for song end	appears to wait until a song finishes playing before executing next command	2004.08.05
EF	5F6E	1	EF	alias	same as 01	2008.02.22
F0	3CD0	2	F0 bb	darken	bb - amount to darken . gradually turns screen black (00 = completely dark)	2004.05.21
F1	3D07	2	F1 cc (dd)	color addition	"cc - E0 - Three bit BGR color to display . 1F - intensity of color overlay . dd - 80 - add/sub mode . 7F - duration .  variable length command . If cc = 00, then the command is only 2 bytes"	2008.01.07
F2	3CFD	1	F2	fade out screen	fades screen out	2004.06.17
F3	3D7A	1	F3	wait for brighten end		2007.06.29
F4	3D84	2	F4 rr	shake	rr - shake screen . (00 = off)	2004.06.22
F5	5F6E	1	F5	alias	same as 01	2008.02.22
F6	5F6E	1	F6	alias	same as 01	2008.02.22
F7	5F6E	1	F7	alias	same as 01	2008.02.22
F8	3E5C	1	F8	restore hp / mp	Restores party to full hp and mp	2004.05.28
F9	3E6E	1	F9	restore hp	Restores party to full hp	2004.06.25
FA	3E75	1	FA	restore mp	Restores party to full mp . overlaps F8	2004.06.25
FB	5F6E	1	FB	alias	same as 01	2008.02.22
FC	5F6E	1	FC	alias	same as 01	2008.02.22
FD	5F6E	1	FD	alias	same as 01	2008.02.22
FE	3F26	18	FE (17 args)		unknown - seems to deal with drawing on-screen geometry	2004.07.21
FF	3FAF	2	FF ss …	mode 7 scene	"ss - scene . When value is 90 or higher, calls subroutines and may read more bytes, unknown behavior"	2004.04.29
